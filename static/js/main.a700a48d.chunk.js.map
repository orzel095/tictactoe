{"version":3,"sources":["Home.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Home","props","player1","player2","setPlayer1","setPlayer2","useState","playerValue","setPlayerValue","onChange","e","preventDefault","target","value","onSubmit","player","className","type","fields","App","setPlayer","winner","setWinner","occupiedArray","setOccupiedArray","moves","setMoves","wins","useEffect","arrXO","document","querySelectorAll","forEach","el","push","innerHTML","arr","x","o","elem","onTargetClick","id","isOccupied","indexOf","resetGame","window","location","reload","map","i","key","onClick","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a700a48d.chunk.js","sourcesContent":["import React, {useState} from \"react\";\n\nimport \"./Home.css\"\n\nfunction Home(props){\n    const {player1, player2, setPlayer1, setPlayer2} = props;\n\n    const [playerValue, setPlayerValue] = useState(null);\n\n    const onChange = (e) => {\n        e.preventDefault();\n        setPlayerValue(e.target.value);\n    }\n\n    const onSubmit = (e,player) => {\n        e.preventDefault();\n        player === 1 && setPlayer1(playerValue)\n        player === 2 && setPlayer2(playerValue)\n    }\n\n\n    return(\n        <div className=\"home\">\n            <h2 className=\"title\">Wpisz nazwę gracza:</h2>\n            {!player1 && !player2 && (\n                <>\n                <p>Gracz nr 1:</p>\n                <form onSubmit={e => onSubmit(e,1)}>\n                    <input onChange={e => onChange(e)}></input>\n                    <button type=\"submit\">DALEJ</button>\n                </form>\n                </>\n            )}\n            {!player2 && player1 && (\n                <>\n                <p>Gracz nr 2:</p>\n                <form onSubmit={e => onSubmit(e,2)}>\n                    <input onChange={e => onChange(e)}></input>\n                    <button type=\"submit\">DALEJ</button>\n                </form>\n                </>\n            )}\n        </div>\n    )\n}\n\nexport default Home","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nimport Home from \"./Home\";\n\nconst fields = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n\nfunction App() {\n  const [player1, setPlayer1] = useState(null);\n  const [player2, setPlayer2] = useState(null);\n\n  const [player, setPlayer] = useState(0);\n  const [winner, setWinner] = useState(null);\n  const [occupiedArray, setOccupiedArray] = useState([]);\n  const [moves, setMoves] = useState(0);\n\n  const wins = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n\n  useEffect(() => {\n    const arrXO = [];\n    document.querySelectorAll(\".field\").forEach(el => arrXO.push(el.innerHTML));\n\n    wins.forEach(arr => {\n      let x = 0;\n      let o = 0;\n      arr.forEach(elem => {\n        if (arrXO[elem] === \"X\") {\n          return x++;\n        }\n        if (arrXO[elem] === \"O\") {\n          return o++;\n        }\n      });\n      x === 3 && setWinner(1);\n      o === 3 && setWinner(2);\n    });\n  });\n\n  const onTargetClick = e => {\n    const id = e.target.id;\n    const isOccupied = occupiedArray.indexOf(+id) !== -1;\n\n    if (player === 0 && !isOccupied) {\n      e.target.innerHTML = \"X\";\n      setOccupiedArray([...occupiedArray, +id]);\n      setPlayer(1);\n    } else if (player === 1 && !isOccupied) {\n      e.target.innerHTML = \"O\";\n      setOccupiedArray([...occupiedArray, +id]);\n      setPlayer(0);\n    }\n\n    setMoves(moves + 1);\n  };\n\n  const resetGame = () => {\n    window.location.reload()\n  }\n\n  return (\n    <div className=\"App\">\n      {!player1 || !player2 ? (\n        <Home\n          player1={player1}\n          player2={player2}\n          setPlayer1={setPlayer1}\n          setPlayer2={setPlayer2}\n        />\n      ) : (\n        <>\n          <div className=\"container\">\n            <div className=\"battlefield\">\n              {fields.map((el, i) => (\n                <div\n                  id={i}\n                  key={`field_${i}`}\n                  className=\"field\"\n                  onClick={onTargetClick}\n                ></div>\n              ))}\n            </div>\n          </div>\n          {winner && (\n            <div className=\"alert\">\n              <p>Wygrał/a</p>\n              <p>{winner === 1 ? player1 : player2}</p>\n              <button onClick={() => resetGame()}>Zagraj Ponownie</button>\n            </div>\n          )}\n          {moves === 9 && !winner && (\n            <div className=\"alert\">\n              <p>Remis</p>\n              <button onClick={() => resetGame()}>Zagraj Ponownie</button>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}